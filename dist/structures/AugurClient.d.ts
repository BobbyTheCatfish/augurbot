import Discord, { Client } from "discord.js";
import { ErrorHandler, ParseFunction } from "../types/UtilTypes.js";
import ModuleManager from "../managers/Modules.js";
import { AugurOptions, BotConfig, CommandExecution, InteractionExecution } from "../types/ClientTypes.js";
export default class AugurClient extends Client {
    config: BotConfig;
    augurOptions: AugurOptions;
    moduleManager: ModuleManager;
    /** @deprecated Probably best to implement database stuff yourself. Removing in the next major version. */
    db?: any;
    errorHandler: ErrorHandler;
    parse: ParseFunction;
    commandExecution: CommandExecution;
    interactionExecution: InteractionExecution;
    delayStart: () => Promise<any>;
    applicationId: string;
    private debug;
    private log;
    private readyEvent;
    private fetchMsg;
    private fetchReact;
    private eventHandler;
    private start;
    constructor(config: BotConfig, options?: AugurOptions);
    destroy(): Promise<void>;
    login(token?: string): Promise<string>;
    private getChannel;
    wrongTypeErr(id: string, strType: string, expected: string): null;
    getTextChannel(id: string): Discord.TextChannel | null;
    getDmChannel(id: string): Discord.DMChannel | null;
    getGroupDmChannel(id: string): Discord.PartialGroupDMChannel | null;
    getVoiceChannel(id: string): Discord.VoiceChannel | null;
    getCategoryChannel(id: string): Discord.CategoryChannel | null;
    getNewsChannel(id: string): Discord.NewsChannel | null;
    getAnnouncementsThread(id: string): Discord.PublicThreadChannel<boolean> | null;
    getPublicThread(id: string): Discord.PublicThreadChannel<boolean> | null;
    getPrivateThread(id: string): Discord.PrivateThreadChannel | null;
    getStage(id: string): Discord.StageChannel | null;
    getDirectory(id: string): Discord.DirectoryChannel | null;
    getForumChannel(id: string): Discord.ForumChannel | null;
}
